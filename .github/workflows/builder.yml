name: CI/CD avec Docker

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Télécharger le code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Installer JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 3. Build avec Maven
      - name: Build with Maven
        run: mvn -Dmaven.test.skip=true -B package --file pom.xml

      # 4. Renommer le jar en sa.jar
      - name: Rename JAR
        run: mv target/*.jar target/sa.jar

      # 5. Copier le JAR et le Dockerfile sur la VM
      - name: Copy files to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: |
            target/sa.jar
            Dockerfile
          target: ~/opt/applications/sa

      # 6. Construire et lancer le container Docker sur la VM
      - name: Deploy Docker container
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/opt/applications/sa
            echo "==> Build Docker image"
            docker build -t sa-app .
            
            echo "==> Stop and remove old container"
            docker stop sa-app || true
            docker rm sa-app || true
            
            echo "==> Run new container"
            docker run -d --name sa-app -p 8080:8080 sa-app
