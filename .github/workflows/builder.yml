name: Java CI with Maven and Docker

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Configurer Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 3️⃣ Compiler le projet avec Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4️⃣ Construire l'image Docker
      - name: Build Docker image
        run: docker build -t monapp-java .

      # 5️⃣ Copier et exécuter sur le VPS via SSH
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            # Arrêter et supprimer l'ancien conteneur
            docker stop sa-app || true
            docker rm sa-app || true
            
            # Vérifier si l'image existe déjà sur le VPS
            docker image inspect monapp-java || true
            
            # Copier le jar ou reconstruire sur le serveur
            # Option A: si tu veux pousser l'image complète depuis GitHub, tu peux configurer un registry
            # Option B: pour simplifier, on peut reconstruire l'image sur le VPS
            mkdir -p ~/app && cd ~/app
            # Copier le jar depuis GitHub Actions via scp si nécessaire (ici on suppose que le jar est déjà présent)
            
            # Lancer le conteneur Docker
            docker run -d -p 8080:8080 --name sa-app monapp-java
