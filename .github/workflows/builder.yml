name: Java CI & Docker Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Télécharger le code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Installer JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Build Maven
      - name: Build with Maven
        run: mvn -Dmaven.test.skip=true -B package --file pom.xml

      # Renommer le jar
      - name: Rename jar
        run: mv target/*.jar target/sa.jar

      # Copier le jar et le Dockerfile sur le serveur
      - name: Copy files to remote server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: |
            target/sa.jar
            Dockerfile
          target: ~/opt/applications/sa

      # Construire l'image Docker et lancer le container
      - name: Deploy Docker container
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/opt/applications/sa
            # Créer l'image Docker
            docker build -t sa-app .
            # Arrêter et supprimer l'ancien container si il existe
            docker stop sa-app || true
            docker rm sa-app || true
            # Lancer le container
            docker run -d --name sa-app -p 8080:8080 sa-app
